"use strict";(self["webpackChunkclipbroad"]=self["webpackChunkclipbroad"]||[]).push([[618],{9618:(t,e,i)=>{i.r(e),i.d(e,{default:()=>P});var a=i(3673),o=i(8880),s=i(2323);const n=["src"];function l(t,e,i,l,r,h){const d=(0,a.up)("q-icon"),p=(0,a.up)("q-item-section"),c=(0,a.up)("q-item-label"),m=(0,a.up)("q-item"),u=(0,a.up)("q-list"),g=(0,a.up)("q-page"),b=(0,a.up)("q-pull-to-refresh"),f=(0,a.Q2)("ripple");return(0,a.wg)(),(0,a.j4)(b,{onRefresh:t.syncNow,color:"black",icon:"autorenew"},{default:(0,a.w5)((()=>[(0,a.Wm)(g,{class:"q-pa-md"},{default:(0,a.w5)((()=>[(0,a.Wm)(u,{bordered:"",separator:""},{default:(0,a.w5)((()=>[(0,a.Wm)(o.W3,{appear:"","enter-active-class":"animated slideInLeft","leave-active-class":"animated fadeOutLeft"},{default:(0,a.w5)((()=>[((0,a.wg)(!0),(0,a.iD)(a.HY,null,(0,a.Ko)(t.items,((e,i)=>(0,a.wy)(((0,a.wg)(),(0,a.j4)(m,{key:i,clickable:"",onDblclick:e=>t.copyItem(i)},{default:(0,a.w5)((()=>[(0,a.Wm)(p,{avatar:""},{default:(0,a.w5)((()=>[(0,a.Wm)(d,{color:"primary",name:t.itemIcon(e.type)},null,8,["name"])])),_:2},1024),"text"==e.type?((0,a.wg)(),(0,a.j4)(p,{key:0},{default:(0,a.w5)((()=>[(0,a.Wm)(c,{lines:"3"},{default:(0,a.w5)((()=>[(0,a.Uk)((0,s.zw)(e.value),1)])),_:2},1024)])),_:2},1024)):(0,a.kq)("",!0),"png"==e.type?((0,a.wg)(),(0,a.j4)(p,{key:1},{default:(0,a.w5)((()=>[(0,a._)("img",{src:"data:image/png;base64,"+e.value,style:{"max-height":"300px","object-fit":"contain","max-width":"100%"}},null,8,n)])),_:2},1024)):(0,a.kq)("",!0),(0,a.Wm)(p,{side:""},{default:(0,a.w5)((()=>[(0,a.Wm)(c,{caption:""},{default:(0,a.w5)((()=>[(0,a.Uk)((0,s.zw)(t.prevTime(e.time)),1)])),_:2},1024)])),_:2},1024)])),_:2},1032,["onDblclick"])),[[f]]))),128))])),_:1})])),_:1})])),_:1})])),_:1},8,["onRefresh"])}var r=i(515),h=i.n(r),d=(i(7280),i(7874)),p=i(19),c=i(5814)["Buffer"];const m=i(3559);var u=[],g=!1,b=!1;const f=(0,a.aZ)({computed:h()(h()({},(0,d.rn)("clipboard",["items"])),(0,d.Se)("clipboard",["lastLocalItem"])),methods:h()(h()({},(0,d.nv)("clipboard",["addItem","filterItem","removeItem","setItemUploaded"])),{},{checkClipboard(){if(this.$q.platform.is.electron){const t=window.myAPI.readClipboardImage();if(null==t){const t=window.myAPI.readClipboardText();this.addItemInternal(t,"text")}else this.addItemInternal(t,"png")}else this.$q.platform.is.capacitor?Clipboard.read().then((t=>{"text/plain"==t.type&&this.addItemInternal(t.value,"text")})):this.$q.platform.is.cordova&&cordova.plugins.clipboard.paste((t=>{this.addItemInternal(t,"text")}))},prevTime(t){const e=(new Date).getTime(),i=parseInt((e-t)/1e3);if(i<=0)return"Right Now";if(i<60)return i.toString()+" second"+(i<2?"":"s")+" ago";if(i<3600){const t=parseInt(i/60);return t.toString()+" minute"+(t<2?"":"s")+" ago"}if(i<86400){const t=parseInt(i/3600);return t.toString()+" hour"+(t<2?"":"s")+" ago"}{const t=parseInt(i/3600/24);return t.toString()+" day"+(t<2?"":"s")+" ago"}},itemIcon(t){switch(t){case"text":return"text_fields";case"png":return"image";default:return"text_fields"}},copyItem(t){const e=this.items[t];switch(e.type){case"text":this.removeItem(t),e.time=(new Date).getTime(),e.uploaded=!1,this.addItem(e),this.$q.platform.is.electron?(window.myAPI.writeClipboardText(e.value),window.myAPI.showNotification("Item copied!",e.value),window.myAPI.hideWindow()):this.$q.platform.is.cordova&&(cordova.plugins.clipboard.copy(e.value),this.$q.notify("Copied!"));break;case"png":this.$q.platform.is.electron?(window.myAPI.writeClipboardImage(e.value),window.myAPI.showNotification("Item copied!"),window.myAPI.hideWindow()):this.$q.platform.is.cordova&&window.plugins.socialsharing.shareWithOptions({files:["data:image/png;base64,"+e.value]},null,(t=>{this.$q.notify(t)}));break;default:break}},setDarkMode(){if(this.$q.platform.is.electron){const t=window.myAPI.isDarkMode();this.$q.dark.set(t)}},updateFromGithub(){this.$q.notify("Updating..."),this.$githubInstance.githubRepoExist?this.$githubInstance.githubRepo.getContents("main","",!0).then((({data:t})=>{for(let e=0;e<t.length;e++)(e=>{let i=t[e].name;i=i.split(".");let a=i[0].split("-");if(a.length<2)return;let o=i.length<2?"text":i[1],s=parseInt(a[0]),n=a[1],l=this.items.find((t=>t.md5==a[1]));if(null!=l&&l.time>s)return;let r=t[e].sha,h="text"==o;this.$githubInstance.githubRepo.getBlob(r,h).then((({data:t})=>{let e="text"==o?t:t.content;this.filterItem(n),this.addItem({time:s,md5:n,uploaded:!0,value:e,type:o,source:"remote"})}))})(e)})):p.log("github repo does not exist")},UploadToGithub(){return new Promise(((t,e)=>{if(p.log("uploading to github"),!this.$githubInstance.githubRepoExist)return void p.log("github repo does not exist");let i=[],a=[];for(let s=0;s<this.items.length;s++)this.items[s].uploaded||""==this.items[s].value||(a.push(this.items[s]),this.setItemUploaded(s));if(a.length<=0)return p.log("no item to upload"),void t();for(var o=0;o<a.length;o++)(o=>{let s=a[o].time.toString()+"-"+a[o].md5,n=a[o].value;switch(a[o].type){case"png":s+=".png",n=c.from(n,"base64");break;default:s+="-text";break}this.$githubInstance.githubRepo.createBlob(n).then((({data:o})=>{if(i.push({sha:o.sha,path:s,mode:"100644",type:"blob"}),i.length==a.length){let a;this.GetSha().then((t=>{a=t})).then((()=>this.$githubInstance.githubRepo.createTree(i,a.commit))).then((({data:t})=>this.$githubInstance.githubRepo.commit(a.parent,t.sha,"update"))).then((({data:t})=>{this.$githubInstance.githubRepo.updateHead("heads/main",t.sha,!0)})).then((()=>{p.log("Upload complete"),t()})).catch((t=>{p.log(t),e()}))}})).catch((t=>{p.log(t),e()}))})(o)}))},GetSha(){return new Promise(((t,e)=>{let i,a;this.$githubInstance.githubRepo.getRef("heads/main").then((({data:t})=>{i=t.object.sha})).then((()=>this.$githubInstance.githubRepo.getCommit(i))).then((({data:e})=>(a=e.tree.sha,t({parent:i,commit:a})))).catch((t=>e(t)))}))},resetTimer(){u.forEach(((t,e)=>{clearInterval(t)})),u=[];const t=setInterval(this.checkClipboard,500),e=setInterval(this.UploadToGithub,3e4);u.push(t),u.push(e)},syncNow(t){this.$githubInstance.githubRepoExist?this.UploadToGithub().then((()=>{this.updateFromGithub(),setTimeout(t,1e3)})):this.$router.push("/settings")},setupOpenwith(){cordova.openwith.init((()=>{cordova.openwith.addHandler((t=>{for(var e=0;e<t.items.length;++e){var i=t.items[e];cordova.openwith.load(i,((e,i)=>{i.type.includes("image/")?(this.addItemInternal(e,"png","share"),p.log(this.items)):this.$q.notify("This file type is not supported"),t.exit&&cordova.openwith.exit()}))}})),b=!0}),(()=>{this.$q.notify("openwith plugin init failed")}))},addItemInternal(t,e,i="local"){const a=m.hash(t);""!=t&&(this.items.length<1||null!=this.lastLocalItem&&this.lastLocalItem.md5!=a)&&(this.filterItem(a),this.addItem({time:(new Date).getTime(),value:t,md5:a,uploaded:!1,type:e,source:i}))}}),mounted(){this.$q.localStorage.has("clipbroad-github-token")&&this.$setGithub(this.$q.localStorage.getItem("clipbroad-github-token")).then((()=>{this.updateFromGithub()})).catch((()=>{})),this.resetTimer()},created(){this.setDarkMode(),g||(window.addEventListener("Sync",this.syncNow,!1),g=!0);let t=!this.$q.localStorage.has("clipbroad-hide-icon")||this.$q.localStorage.getItem("clipbroad-hide-icon");this.$q.platform.is.electron&&window.myAPI.setHideIcon(t),this.$q.platform.is.cordova&&(b||this.setupOpenwith())}});var w=i(3720),I=i(4379),v=i(7011),y=i(3414),$=i(2035),q=i(4554),k=i(2350),x=i(6489),R=i(9789),T=i.n(R);f.render=l;const P=f;T()(f,"components",{QPullToRefresh:w.Z,QPage:I.Z,QList:v.Z,QItem:y.Z,QItemSection:$.Z,QIcon:q.Z,QItemLabel:k.Z}),T()(f,"directives",{Ripple:x.Z})}}]);