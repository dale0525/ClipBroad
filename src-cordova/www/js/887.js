"use strict";(self["webpackChunkclipbroad"]=self["webpackChunkclipbroad"]||[]).push([[887],{1887:(t,e,i)=>{i.r(e),i.d(e,{default:()=>Z});var o=i(3673),l=i(8880),a=i(2323);const s=["src"],n={key:0,class:"absolute-bottom-left"},h={class:"absolute-bottom-right"};function r(t,e,i,r,d,c){const m=(0,o.up)("q-checkbox"),u=(0,o.up)("q-item-section"),p=(0,o.up)("q-icon"),g=(0,o.up)("q-item-label"),f=(0,o.up)("q-item"),I=(0,o.up)("q-list"),b=(0,o.up)("q-btn"),w=(0,o.up)("q-toolbar"),v=(0,o.up)("q-page"),y=(0,o.up)("q-pull-to-refresh"),$=(0,o.Q2)("ripple"),q=(0,o.Q2)("touch-hold");return(0,o.wg)(),(0,o.j4)(y,{onRefresh:t.syncNow,color:"black",icon:"autorenew"},{default:(0,o.w5)((()=>[(0,o.Wm)(v,{class:"q-pa-md"},{default:(0,o.w5)((()=>[(0,o.Wm)(I,{bordered:"",separator:""},{default:(0,o.w5)((()=>[(0,o.Wm)(l.W3,{appear:"","enter-active-class":"animated slideInLeft","leave-active-class":"animated fadeOutLeft"},{default:(0,o.w5)((()=>[((0,o.wg)(!0),(0,o.iD)(o.HY,null,(0,o.Ko)(t.items,((i,l)=>(0,o.wy)(((0,o.wg)(),(0,o.j4)(f,{key:l,clickable:"",onDblclick:e=>t.copyItem(l)},{default:(0,o.w5)((()=>[t.toggleActionBtn?((0,o.wg)(),(0,o.j4)(u,{key:0,avatar:""},{default:(0,o.w5)((()=>[(0,o.Wm)(m,{modelValue:t.toDeleteItems,"onUpdate:modelValue":e[0]||(e[0]=e=>t.toDeleteItems=e),val:l,color:"orange",onClick:e[1]||(e[1]=()=>{t.toDeleteItems.length==t.items.length?t.isAllSelected=!0:t.isAllSelected=null})},null,8,["modelValue","val"])])),_:2},1024)):(0,o.kq)("",!0),(0,o.Wm)(u,{avatar:""},{default:(0,o.w5)((()=>[(0,o.Wm)(p,{color:"primary",name:t.itemIcon(i.type)},null,8,["name"])])),_:2},1024),"text"==i.type?((0,o.wg)(),(0,o.j4)(u,{key:1},{default:(0,o.w5)((()=>[(0,o.Wm)(g,{lines:"3"},{default:(0,o.w5)((()=>[(0,o.Uk)((0,a.zw)(i.value),1)])),_:2},1024)])),_:2},1024)):(0,o.kq)("",!0),"png"==i.type?((0,o.wg)(),(0,o.j4)(u,{key:2},{default:(0,o.w5)((()=>[(0,o._)("img",{src:"data:image/png;base64,"+i.value,style:{"max-height":"300px","object-fit":"contain","max-width":"100%"}},null,8,s)])),_:2},1024)):(0,o.kq)("",!0),(0,o.Wm)(u,{side:""},{default:(0,o.w5)((()=>[(0,o.Wm)(g,{caption:""},{default:(0,o.w5)((()=>[(0,o.Uk)((0,a.zw)(t.prevTime(i.time)),1)])),_:2},1024)])),_:2},1024)])),_:2},1032,["onDblclick"])),[[$],[q,()=>{t.toggleActionBtn=!0},"500",{mouse:!0}]]))),128))])),_:1})])),_:1}),t.toggleActionBtn?((0,o.wg)(),(0,o.j4)(w,{key:0,style:{"z-index":"99999",height:"80px"},class:"fixed-bottom bg-black"},{default:(0,o.w5)((()=>[t.toggleActionBtn?((0,o.wg)(),(0,o.iD)("div",n,[(0,o.Wm)(u,{avatar:""},{default:(0,o.w5)((()=>[(0,o.Wm)(m,{"keep-color":"","indeterminate-value":null,size:"xl",class:"q-mx-lg",modelValue:t.isAllSelected,"onUpdate:modelValue":e[2]||(e[2]=e=>t.isAllSelected=e),color:"orange",onClick:e[3]||(e[3]=e=>t.selectAll())},null,8,["modelValue"])])),_:1})])):(0,o.kq)("",!0),(0,o._)("div",h,[t.showDeleteBtn?((0,o.wg)(),(0,o.j4)(b,{key:0,fab:"",icon:"delete",color:"orange",class:"q-ma-md",onClick:e[4]||(e[4]=e=>t.deleteSelected())})):(0,o.kq)("",!0),(0,o.Wm)(b,{fab:"",icon:"close",color:"primary",class:"q-ma-md",onClick:e[5]||(e[5]=()=>{t.toDeleteItems=[],t.toggleActionBtn=!1,t.isAllSelected=!1})})])])),_:1})):(0,o.kq)("",!0)])),_:1})])),_:1},8,["onRefresh"])}var d=i(515),c=i.n(d),m=(i(7280),i(7098),i(7874)),u=i(19),p=i(5814)["Buffer"];const g=i(3559),f=500;var I=[],b=!1,w=!1,v=0,y=!1;const $=(0,o.aZ)({data(){return{toDeleteItems:[],toggleActionBtn:!1,isAllSelected:!1}},computed:c()(c()(c()({},(0,m.rn)("clipboard",["items"])),(0,m.Se)("clipboard",["lastLocalItem"])),{},{showDeleteBtn(){return this.toDeleteItems.length>0}}),methods:c()(c()({},(0,m.nv)("clipboard",["addItem","addRelatedItem","removeItem","setItemUploaded"])),{},{checkClipboard(){if(this.$q.platform.is.electron){const t=window.myAPI.readClipboardImage();if(null==t){const t=window.myAPI.readClipboardText();this.addItemInternal(t,"text")}else this.addItemInternal(t,"png")}else this.$q.platform.is.capacitor?Clipboard.read().then((t=>{"text/plain"==t.type&&this.addItemInternal(t.value,"text")})):this.$q.platform.is.cordova&&cordova.plugins.clipboard.paste((t=>{this.addItemInternal(t,"text")}))},prevTime(t){const e=(new Date).getTime(),i=parseInt((e-t)/1e3);if(i<=0)return"Right Now";if(i<60)return i.toString()+"s ago";if(i<3600){const t=parseInt(i/60);return t.toString()+"m ago"}if(i<86400){const t=parseInt(i/3600);return t.toString()+"h ago"}{const t=parseInt(i/3600/24);return t.toString()+"d ago"}},itemIcon(t){switch(t){case"text":return"text_fields";case"png":return"image";default:return"text_fields"}},copyItem(t){const e=this.items[t];switch(e.type){case"text":this.removeItem(t),e.time=(new Date).getTime(),e.uploaded=!1,this.addItem(e),this.$q.platform.is.electron?(window.myAPI.writeClipboardText(e.value),!0===this.$q.localStorage.getItem("clipbroad-show-copied-notification")&&window.myAPI.showNotification(this.$t("copied"),e.value),window.myAPI.hideWindow()):this.$q.platform.is.cordova&&(cordova.plugins.clipboard.copy(e.value),this.$q.notify(this.$t("copied")));break;case"png":this.$q.platform.is.electron?(window.myAPI.writeClipboardImage(e.value),!0===this.$q.localStorage.getItem("clipbroad-show-copied-notification")&&window.myAPI.showNotification(this.$t("copied")),window.myAPI.hideWindow()):this.$q.platform.is.cordova&&window.plugins.socialsharing.shareWithOptions({files:["data:image/png;base64,"+e.value]},null,(t=>{this.$q.notify(t)}));break;default:break}},setDarkMode(){if(this.$q.platform.is.electron){const t=window.myAPI.isDarkMode();this.$q.dark.set(t)}},isCellular(){if(this.$q.platform.is.electron)return!1;var t=navigator.connection.type;return!![Connection.CELL_2G,Connection.CELL_3G,Connection.CELL_4G,Connection.CELL].includes(t)},isConnected(){if(this.$q.platform.is.electron)return!0;var t=navigator.connection.type;return t!=Connection.NONE},shouldSync(){return this.$githubInstance.githubRepoExist?this.isConnected()?!0===this.$q.localStorage.getItem("clipbroad-use-mobile-data")||!this.isCellular()||(this.$q.notify(this.$t("syncUntilWifi")),!1):(this.$q.notify(this.$t("noNetwork")),!1):(u.log("github repo does not exist"),!1)},updateFromGithub(){this.shouldSync()&&(this.$q.notify(this.$t("updating")),this.$githubInstance.githubRepo.getContents("main","",!0).then((({data:t})=>{v=Math.max(t.length-f,0);const e=this.$q.localStorage.has("clipbroad-max-item")?this.$q.localStorage.getItem("clipbroad-max-item"):20;var i=0;for(let l=t.length-1;l>=Math.max(0,t.length-f);l--)(o=>{if(i>=e)return;let l=t[o].name;l=l.split(".");let a=l[0].split("-");if(a.length<2)return;let s=l.length<2?"text":l[1],n=parseInt(a[0]),h=a[1],r=this.items.findIndex((t=>t.md5==a[1]));if(r>=0&&this.items[r].time>n)return void this.addRelatedItem({index:r,item:{time:n,md5:h,uploaded:!0,value:null,type:null,source:null}});i++;let d=t[o].sha,c="text"==s;this.$githubInstance.githubRepo.getBlob(d,c).then((({data:t})=>{let e="text"==s?t:t.content;this.addItem({time:n,md5:h,uploaded:!0,value:e,type:s,source:"remote",relatedItems:[]})}))})(l);if(v<=0)return;let o=[];for(let l=0;l<v;l++)o.push({path:t[l].path,sha:null,mode:"100644",type:"blob"});this.uploadTree(o).then((()=>{v=0,u.log("delete complete")})).catch((t=>{u.log(t)}))})))},uploadToGithub(){return new Promise(((t,e)=>{if(!this.shouldSync())return void t();if(y)return void t();u.log("uploading to github"),y=!0;let i=[],o=[];for(let a=0;a<this.items.length;a++)this.items[a].uploaded||""==this.items[a].value||(o.push(this.items[a]),this.setItemUploaded(a));if(o.length<=0)return u.log("no item to upload"),y=!1,void t();for(var l=0;l<o.length;l++)(l=>{let a=this.getItemPath(o[l]),s=o[l].value;switch(o[l].type){case"png":s=p.from(s,"base64");break;default:break}this.$githubInstance.githubRepo.createBlob(s).then((({data:l})=>{i.push({sha:l.sha,path:a,mode:"100644",type:"blob"}),i.length==o.length&&this.uploadTree(i).then((()=>{t()})).catch((t=>{u.log(t),this.$q.notify(this.$t("error")),e(t)}))})).catch((t=>{u.log(t),this.$q.notify(this.$t("error")),e(t)}))})(l)}))},uploadTree(t){return new Promise(((e,i)=>{let o;y=!0,this.getSha().then((t=>{o=t})).then((()=>this.$githubInstance.githubRepo.createTree(t,o.commit))).then((({data:t})=>this.$githubInstance.githubRepo.commit(o.parent,t.sha,"update"))).then((({data:t})=>{this.$githubInstance.githubRepo.updateHead("heads/main",t.sha,!0)})).then((()=>{y=!1,e()})).catch((t=>{y=!1,i(t)}))}))},getSha(){return new Promise(((t,e)=>{let i,o;this.$githubInstance.githubRepo.getRef("heads/main").then((({data:t})=>{i=t.object.sha})).then((()=>this.$githubInstance.githubRepo.getCommit(i))).then((({data:e})=>(o=e.tree.sha,t({parent:i,commit:o})))).catch((t=>e(t)))}))},resetTimer(){I.forEach(((t,e)=>{clearInterval(t)})),I=[];const t=setInterval(this.checkClipboard,500),e=setInterval(this.uploadToGithub,3e4);I.push(t),I.push(e)},syncNow(t){this.$githubInstance.githubRepoExist?this.uploadToGithub().then((()=>{this.updateFromGithub(),setTimeout(t,1e3)})):this.$router.push("/settings")},setupOpenwith(){cordova.openwith.init((()=>{cordova.openwith.addHandler((t=>{for(var e=0;e<t.items.length;++e){var i=t.items[e];cordova.openwith.load(i,((e,i)=>{i.type.includes("image/")?this.addItemInternal(e,"png","share"):this.$q.notify(this.$t("fileTypeNotSupported")),t.exit&&cordova.openwith.exit()}))}})),w=!0}),(()=>{u.log("openwith plugin init failed")}))},addItemInternal(t,e,i="local"){const o=g.hash(t);""!=t&&(this.items.length<1||null!=this.lastLocalItem&&this.lastLocalItem.md5!=o)&&this.addItem({time:(new Date).getTime(),value:t,md5:o,uploaded:!1,type:e,source:i,relatedItems:[]})},getItemPath(t){let e=t.time.toString()+"-"+t.md5;switch(t.type){case"png":e+=".png";break;default:e+="-text";break}return e},deleteSelected(t=!0){if(this.toDeleteItems.length>0){if(t&&this.$q.notify(this.$t("deleting")),y)return void setTimeout((()=>{this.deleteSelected(!1)}),1e3);let e=[];this.toDeleteItems.sort((function(t,e){return t-e}));for(let t=0;t<this.toDeleteItems.length;t++)if(this.items[this.toDeleteItems[t]].uploaded&&e.push({sha:null,path:this.getItemPath(this.items[this.toDeleteItems[t]]),mode:"100644",type:"blob"}),this.items[this.toDeleteItems[t]].relatedItems.length>0)for(let i=0;i<this.items[this.toDeleteItems[t]].relatedItems.length;i++)e.push({sha:null,path:this.getItemPath(this.items[this.toDeleteItems[t]].relatedItems[i]),mode:"100644",type:"blob"});if(e.length>0)this.uploadTree(e).then((()=>{for(let t=this.toDeleteItems.length-1;t>=0;t--)this.removeItem(this.toDeleteItems[t]);this.$q.notify(this.$t("deleted"))})).catch((t=>{u.log(t),this.$q.notify(this.$t("error"))}));else{for(let t=this.toDeleteItems.length-1;t>=0;t--)this.removeItem(this.toDeleteItems[t]);this.$q.notify(this.$t("deleted"))}}this.toggleActionBtn=!1,this.isAllSelected=!1},selectAll(){if(this.toDeleteItems=[],!0===this.isAllSelected)for(let t=0;t<this.items.length;t++)this.toDeleteItems.push(t)}}),mounted(){this.$q.localStorage.has("clipbroad-github-token")&&this.$setGithub(this.$q.localStorage.getItem("clipbroad-github-token")).then((()=>{this.updateFromGithub()})).catch((()=>{})),this.resetTimer()},created(){this.$i18n.locale=this.$q.lang.getLocale(),this.setDarkMode(),b||(window.addEventListener("Sync",this.syncNow,!1),b=!0);let t=!this.$q.localStorage.has("clipbroad-hide-icon")||this.$q.localStorage.getItem("clipbroad-hide-icon");this.$q.platform.is.electron&&window.myAPI.setHideIcon(t),this.$q.platform.is.cordova&&(w||this.setupOpenwith()),this.resetTimer()}});var q=i(3720),k=i(4379),x=i(7011),S=i(3414),D=i(2035),C=i(5735),A=i(4554),T=i(2350),_=i(9570),P=i(4607),R=i(6489),L=i(7281),W=i(9789),B=i.n(W);$.render=r;const Z=$;B()($,"components",{QPullToRefresh:q.Z,QPage:k.Z,QList:x.Z,QItem:S.Z,QItemSection:D.Z,QCheckbox:C.Z,QIcon:A.Z,QItemLabel:T.Z,QToolbar:_.Z,QBtn:P.Z}),B()($,"directives",{Ripple:R.Z,TouchHold:L.Z})}}]);